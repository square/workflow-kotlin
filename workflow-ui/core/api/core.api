public abstract interface class com/squareup/workflow1/ui/Compatible {
	public static final field Companion Lcom/squareup/workflow1/ui/Compatible$Companion;
	public abstract fun getCompatibilityKey ()Ljava/lang/String;
}

public final class com/squareup/workflow1/ui/Compatible$Companion {
	public final fun keyFor (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
	public static synthetic fun keyFor$default (Lcom/squareup/workflow1/ui/Compatible$Companion;Ljava/lang/Object;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;
}

public final class com/squareup/workflow1/ui/CompatibleKt {
	public static final fun compatible (Ljava/lang/Object;Ljava/lang/Object;)Z
}

public abstract interface class com/squareup/workflow1/ui/Container {
	public abstract fun asSequence ()Lkotlin/sequences/Sequence;
	public abstract fun map (Lkotlin/jvm/functions/Function1;)Lcom/squareup/workflow1/ui/Container;
}

public final class com/squareup/workflow1/ui/EnvironmentScreen : com/squareup/workflow1/ui/Screen, com/squareup/workflow1/ui/Wrapper {
	public fun <init> (Lcom/squareup/workflow1/ui/Screen;Lcom/squareup/workflow1/ui/ViewEnvironment;)V
	public synthetic fun <init> (Lcom/squareup/workflow1/ui/Screen;Lcom/squareup/workflow1/ui/ViewEnvironment;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun asSequence ()Lkotlin/sequences/Sequence;
	public fun getCompatibilityKey ()Ljava/lang/String;
	public fun getContent ()Lcom/squareup/workflow1/ui/Screen;
	public synthetic fun getContent ()Ljava/lang/Object;
	public final fun getEnvironment ()Lcom/squareup/workflow1/ui/ViewEnvironment;
	public synthetic fun map (Lkotlin/jvm/functions/Function1;)Lcom/squareup/workflow1/ui/Container;
	public fun map (Lkotlin/jvm/functions/Function1;)Lcom/squareup/workflow1/ui/EnvironmentScreen;
	public synthetic fun map (Lkotlin/jvm/functions/Function1;)Lcom/squareup/workflow1/ui/Wrapper;
}

public final class com/squareup/workflow1/ui/EnvironmentScreenKt {
	public static final fun withEnvironment (Lcom/squareup/workflow1/ui/Screen;Lcom/squareup/workflow1/ui/ViewEnvironment;)Lcom/squareup/workflow1/ui/EnvironmentScreen;
	public static final fun withEnvironment (Lcom/squareup/workflow1/ui/Screen;Lkotlin/Pair;)Lcom/squareup/workflow1/ui/EnvironmentScreen;
	public static synthetic fun withEnvironment$default (Lcom/squareup/workflow1/ui/Screen;Lcom/squareup/workflow1/ui/ViewEnvironment;ILjava/lang/Object;)Lcom/squareup/workflow1/ui/EnvironmentScreen;
	public static final fun withRegistry (Lcom/squareup/workflow1/ui/Screen;Lcom/squareup/workflow1/ui/ViewRegistry;)Lcom/squareup/workflow1/ui/EnvironmentScreen;
}

public final class com/squareup/workflow1/ui/NamedScreen : com/squareup/workflow1/ui/Screen, com/squareup/workflow1/ui/Wrapper {
	public fun <init> (Lcom/squareup/workflow1/ui/Screen;Ljava/lang/String;)V
	public fun asSequence ()Lkotlin/sequences/Sequence;
	public final fun component1 ()Lcom/squareup/workflow1/ui/Screen;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Lcom/squareup/workflow1/ui/Screen;Ljava/lang/String;)Lcom/squareup/workflow1/ui/NamedScreen;
	public static synthetic fun copy$default (Lcom/squareup/workflow1/ui/NamedScreen;Lcom/squareup/workflow1/ui/Screen;Ljava/lang/String;ILjava/lang/Object;)Lcom/squareup/workflow1/ui/NamedScreen;
	public fun equals (Ljava/lang/Object;)Z
	public fun getCompatibilityKey ()Ljava/lang/String;
	public fun getContent ()Lcom/squareup/workflow1/ui/Screen;
	public synthetic fun getContent ()Ljava/lang/Object;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public synthetic fun map (Lkotlin/jvm/functions/Function1;)Lcom/squareup/workflow1/ui/Container;
	public fun map (Lkotlin/jvm/functions/Function1;)Lcom/squareup/workflow1/ui/NamedScreen;
	public synthetic fun map (Lkotlin/jvm/functions/Function1;)Lcom/squareup/workflow1/ui/Wrapper;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class com/squareup/workflow1/ui/Screen {
}

public abstract interface class com/squareup/workflow1/ui/TextController {
	public abstract fun getOnTextChanged ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getTextValue ()Ljava/lang/String;
	public abstract fun setTextValue (Ljava/lang/String;)V
}

public final class com/squareup/workflow1/ui/TextControllerKt {
	public static final fun TextController (Ljava/lang/String;)Lcom/squareup/workflow1/ui/TextController;
	public static synthetic fun TextController$default (Ljava/lang/String;ILjava/lang/Object;)Lcom/squareup/workflow1/ui/TextController;
}

public final class com/squareup/workflow1/ui/ViewEnvironment {
	public static final field Companion Lcom/squareup/workflow1/ui/ViewEnvironment$Companion;
	public fun equals (Ljava/lang/Object;)Z
	public final fun get (Lcom/squareup/workflow1/ui/ViewEnvironmentKey;)Ljava/lang/Object;
	public final fun getMap ()Ljava/util/Map;
	public fun hashCode ()I
	public final fun plus (Lcom/squareup/workflow1/ui/ViewEnvironment;)Lcom/squareup/workflow1/ui/ViewEnvironment;
	public final fun plus (Lkotlin/Pair;)Lcom/squareup/workflow1/ui/ViewEnvironment;
	public fun toString ()Ljava/lang/String;
}

public final class com/squareup/workflow1/ui/ViewEnvironment$Companion {
	public final fun getEMPTY ()Lcom/squareup/workflow1/ui/ViewEnvironment;
}

public abstract class com/squareup/workflow1/ui/ViewEnvironmentKey {
	public fun <init> ()V
	public fun combine (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun equals (Ljava/lang/Object;)Z
	public abstract fun getDefault ()Ljava/lang/Object;
	public final fun hashCode ()I
}

public abstract interface class com/squareup/workflow1/ui/ViewRegistry {
	public static final field Companion Lcom/squareup/workflow1/ui/ViewRegistry$Companion;
	public abstract fun getEntryFor (Lcom/squareup/workflow1/ui/ViewRegistry$Key;)Lcom/squareup/workflow1/ui/ViewRegistry$Entry;
	public abstract fun getKeys ()Ljava/util/Set;
}

public final class com/squareup/workflow1/ui/ViewRegistry$Companion : com/squareup/workflow1/ui/ViewEnvironmentKey {
	public fun combine (Lcom/squareup/workflow1/ui/ViewRegistry;Lcom/squareup/workflow1/ui/ViewRegistry;)Lcom/squareup/workflow1/ui/ViewRegistry;
	public synthetic fun combine (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getDefault ()Lcom/squareup/workflow1/ui/ViewRegistry;
	public synthetic fun getDefault ()Ljava/lang/Object;
}

public abstract interface class com/squareup/workflow1/ui/ViewRegistry$Entry {
	public abstract fun getKey ()Lcom/squareup/workflow1/ui/ViewRegistry$Key;
}

public final class com/squareup/workflow1/ui/ViewRegistry$Key {
	public fun <init> (Lkotlin/reflect/KClass;Lkotlin/reflect/KClass;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFactoryType ()Lkotlin/reflect/KClass;
	public final fun getRenderingType ()Lkotlin/reflect/KClass;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/squareup/workflow1/ui/ViewRegistryKt {
	public static final fun ViewRegistry ()Lcom/squareup/workflow1/ui/ViewRegistry;
	public static final fun ViewRegistry ([Lcom/squareup/workflow1/ui/ViewRegistry$Entry;)Lcom/squareup/workflow1/ui/ViewRegistry;
	public static final fun merge (Lcom/squareup/workflow1/ui/ViewRegistry;Lcom/squareup/workflow1/ui/ViewRegistry;)Lcom/squareup/workflow1/ui/ViewRegistry;
	public static final fun plus (Lcom/squareup/workflow1/ui/ViewEnvironment;Lcom/squareup/workflow1/ui/ViewRegistry;)Lcom/squareup/workflow1/ui/ViewEnvironment;
	public static final fun plus (Lcom/squareup/workflow1/ui/ViewRegistry;Lcom/squareup/workflow1/ui/ViewRegistry$Entry;)Lcom/squareup/workflow1/ui/ViewRegistry;
	public static final fun plus (Lcom/squareup/workflow1/ui/ViewRegistry;Lcom/squareup/workflow1/ui/ViewRegistry;)Lcom/squareup/workflow1/ui/ViewRegistry;
}

public abstract interface annotation class com/squareup/workflow1/ui/WorkflowUiExperimentalApi : java/lang/annotation/Annotation {
}

public abstract interface class com/squareup/workflow1/ui/Wrapper : com/squareup/workflow1/ui/Compatible, com/squareup/workflow1/ui/Container {
	public abstract fun asSequence ()Lkotlin/sequences/Sequence;
	public abstract fun getCompatibilityKey ()Ljava/lang/String;
	public abstract fun getContent ()Ljava/lang/Object;
	public abstract fun map (Lkotlin/jvm/functions/Function1;)Lcom/squareup/workflow1/ui/Wrapper;
}

public final class com/squareup/workflow1/ui/Wrapper$DefaultImpls {
	public static fun asSequence (Lcom/squareup/workflow1/ui/Wrapper;)Lkotlin/sequences/Sequence;
	public static fun getCompatibilityKey (Lcom/squareup/workflow1/ui/Wrapper;)Ljava/lang/String;
}

public final class com/squareup/workflow1/ui/navigation/AlertOverlay : com/squareup/workflow1/ui/navigation/ModalOverlay {
	public fun <init> (Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;ZLkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;ZLkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/Map;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Z
	public final fun component5 ()Lkotlin/jvm/functions/Function1;
	public final fun copy (Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;ZLkotlin/jvm/functions/Function1;)Lcom/squareup/workflow1/ui/navigation/AlertOverlay;
	public static synthetic fun copy$default (Lcom/squareup/workflow1/ui/navigation/AlertOverlay;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lcom/squareup/workflow1/ui/navigation/AlertOverlay;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getButtons ()Ljava/util/Map;
	public final fun getCancelable ()Z
	public final fun getMessage ()Ljava/lang/String;
	public final fun getOnEvent ()Lkotlin/jvm/functions/Function1;
	public final fun getTitle ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/squareup/workflow1/ui/navigation/AlertOverlay$Button : java/lang/Enum {
	public static final field NEGATIVE Lcom/squareup/workflow1/ui/navigation/AlertOverlay$Button;
	public static final field NEUTRAL Lcom/squareup/workflow1/ui/navigation/AlertOverlay$Button;
	public static final field POSITIVE Lcom/squareup/workflow1/ui/navigation/AlertOverlay$Button;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcom/squareup/workflow1/ui/navigation/AlertOverlay$Button;
	public static fun values ()[Lcom/squareup/workflow1/ui/navigation/AlertOverlay$Button;
}

public abstract class com/squareup/workflow1/ui/navigation/AlertOverlay$Event {
}

public final class com/squareup/workflow1/ui/navigation/AlertOverlay$Event$ButtonClicked : com/squareup/workflow1/ui/navigation/AlertOverlay$Event {
	public fun <init> (Lcom/squareup/workflow1/ui/navigation/AlertOverlay$Button;)V
	public final fun component1 ()Lcom/squareup/workflow1/ui/navigation/AlertOverlay$Button;
	public final fun copy (Lcom/squareup/workflow1/ui/navigation/AlertOverlay$Button;)Lcom/squareup/workflow1/ui/navigation/AlertOverlay$Event$ButtonClicked;
	public static synthetic fun copy$default (Lcom/squareup/workflow1/ui/navigation/AlertOverlay$Event$ButtonClicked;Lcom/squareup/workflow1/ui/navigation/AlertOverlay$Button;ILjava/lang/Object;)Lcom/squareup/workflow1/ui/navigation/AlertOverlay$Event$ButtonClicked;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getButton ()Lcom/squareup/workflow1/ui/navigation/AlertOverlay$Button;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/squareup/workflow1/ui/navigation/AlertOverlay$Event$Canceled : com/squareup/workflow1/ui/navigation/AlertOverlay$Event {
	public static final field INSTANCE Lcom/squareup/workflow1/ui/navigation/AlertOverlay$Event$Canceled;
}

public final class com/squareup/workflow1/ui/navigation/BackStackConfig : java/lang/Enum {
	public static final field Companion Lcom/squareup/workflow1/ui/navigation/BackStackConfig$Companion;
	public static final field First Lcom/squareup/workflow1/ui/navigation/BackStackConfig;
	public static final field None Lcom/squareup/workflow1/ui/navigation/BackStackConfig;
	public static final field Other Lcom/squareup/workflow1/ui/navigation/BackStackConfig;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcom/squareup/workflow1/ui/navigation/BackStackConfig;
	public static fun values ()[Lcom/squareup/workflow1/ui/navigation/BackStackConfig;
}

public final class com/squareup/workflow1/ui/navigation/BackStackConfig$Companion : com/squareup/workflow1/ui/ViewEnvironmentKey {
	public fun getDefault ()Lcom/squareup/workflow1/ui/navigation/BackStackConfig;
	public synthetic fun getDefault ()Ljava/lang/Object;
}

public final class com/squareup/workflow1/ui/navigation/BackStackConfigKt {
	public static final fun plus (Lcom/squareup/workflow1/ui/ViewEnvironment;Lcom/squareup/workflow1/ui/navigation/BackStackConfig;)Lcom/squareup/workflow1/ui/ViewEnvironment;
}

public final class com/squareup/workflow1/ui/navigation/BackStackScreen : com/squareup/workflow1/ui/Container, com/squareup/workflow1/ui/Screen {
	public static final field Companion Lcom/squareup/workflow1/ui/navigation/BackStackScreen$Companion;
	public fun <init> (Lcom/squareup/workflow1/ui/Screen;[Lcom/squareup/workflow1/ui/Screen;)V
	public fun asSequence ()Lkotlin/sequences/Sequence;
	public fun equals (Ljava/lang/Object;)Z
	public final fun get (I)Lcom/squareup/workflow1/ui/Screen;
	public final fun getBackStack ()Ljava/util/List;
	public final fun getFrames ()Ljava/util/List;
	public final fun getTop ()Lcom/squareup/workflow1/ui/Screen;
	public fun hashCode ()I
	public synthetic fun map (Lkotlin/jvm/functions/Function1;)Lcom/squareup/workflow1/ui/Container;
	public fun map (Lkotlin/jvm/functions/Function1;)Lcom/squareup/workflow1/ui/navigation/BackStackScreen;
	public final fun mapIndexed (Lkotlin/jvm/functions/Function2;)Lcom/squareup/workflow1/ui/navigation/BackStackScreen;
	public fun toString ()Ljava/lang/String;
}

public final class com/squareup/workflow1/ui/navigation/BackStackScreen$Companion {
	public final fun fromList (Ljava/util/List;)Lcom/squareup/workflow1/ui/navigation/BackStackScreen;
	public final fun fromListOrNull (Ljava/util/List;)Lcom/squareup/workflow1/ui/navigation/BackStackScreen;
}

public final class com/squareup/workflow1/ui/navigation/BackStackScreenKt {
	public static final fun plus (Lcom/squareup/workflow1/ui/navigation/BackStackScreen;Lcom/squareup/workflow1/ui/navigation/BackStackScreen;)Lcom/squareup/workflow1/ui/navigation/BackStackScreen;
	public static final fun toBackStackScreen (Ljava/util/List;)Lcom/squareup/workflow1/ui/navigation/BackStackScreen;
	public static final fun toBackStackScreenOrNull (Ljava/util/List;)Lcom/squareup/workflow1/ui/navigation/BackStackScreen;
}

public final class com/squareup/workflow1/ui/navigation/BodyAndOverlaysScreen : com/squareup/workflow1/ui/Compatible, com/squareup/workflow1/ui/Screen {
	public fun <init> (Lcom/squareup/workflow1/ui/Screen;Ljava/util/List;Ljava/lang/String;)V
	public synthetic fun <init> (Lcom/squareup/workflow1/ui/Screen;Ljava/util/List;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getBody ()Lcom/squareup/workflow1/ui/Screen;
	public fun getCompatibilityKey ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getOverlays ()Ljava/util/List;
	public final fun mapBody (Lkotlin/jvm/functions/Function1;)Lcom/squareup/workflow1/ui/navigation/BodyAndOverlaysScreen;
	public final fun mapOverlays (Lkotlin/jvm/functions/Function1;)Lcom/squareup/workflow1/ui/navigation/BodyAndOverlaysScreen;
}

public final class com/squareup/workflow1/ui/navigation/FullScreenModal : com/squareup/workflow1/ui/navigation/ModalOverlay, com/squareup/workflow1/ui/navigation/ScreenOverlay {
	public fun <init> (Lcom/squareup/workflow1/ui/Screen;)V
	public fun asSequence ()Lkotlin/sequences/Sequence;
	public fun getCompatibilityKey ()Ljava/lang/String;
	public fun getContent ()Lcom/squareup/workflow1/ui/Screen;
	public synthetic fun getContent ()Ljava/lang/Object;
	public synthetic fun map (Lkotlin/jvm/functions/Function1;)Lcom/squareup/workflow1/ui/Container;
	public synthetic fun map (Lkotlin/jvm/functions/Function1;)Lcom/squareup/workflow1/ui/Wrapper;
	public fun map (Lkotlin/jvm/functions/Function1;)Lcom/squareup/workflow1/ui/navigation/FullScreenModal;
	public synthetic fun map (Lkotlin/jvm/functions/Function1;)Lcom/squareup/workflow1/ui/navigation/ScreenOverlay;
}

public abstract interface class com/squareup/workflow1/ui/navigation/ModalOverlay : com/squareup/workflow1/ui/navigation/Overlay {
}

public abstract interface class com/squareup/workflow1/ui/navigation/Overlay {
}

public abstract interface class com/squareup/workflow1/ui/navigation/ScreenOverlay : com/squareup/workflow1/ui/Wrapper, com/squareup/workflow1/ui/navigation/Overlay {
	public abstract fun getContent ()Lcom/squareup/workflow1/ui/Screen;
	public abstract fun map (Lkotlin/jvm/functions/Function1;)Lcom/squareup/workflow1/ui/navigation/ScreenOverlay;
}

public final class com/squareup/workflow1/ui/navigation/ScreenOverlay$DefaultImpls {
	public static fun asSequence (Lcom/squareup/workflow1/ui/navigation/ScreenOverlay;)Lkotlin/sequences/Sequence;
	public static fun getCompatibilityKey (Lcom/squareup/workflow1/ui/navigation/ScreenOverlay;)Ljava/lang/String;
}

