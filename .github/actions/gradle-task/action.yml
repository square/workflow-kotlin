name: 'Set up Gradle and some task(s) with caching'
description: 'This action performs common steps for a Gradle task.'

inputs:
  task:
    description: 'Gradle command line arguments (supports multi-line input)'
    required: true
  build-root-directory:
    description: 'Path to the root directory of the build'
    required: false
  java-version:
    description: 'The Java version to set up.'
    default: '17'
  distribution:
    description: 'The JDK distribution to use.'
    default: 'zulu'
  restore-cache-key:
    description: 'The unique identifier for the associated cache.  Any other consumers or producers for this cache must use the same name.'
    default: 'null'
  write-cache-key:
    description: 'The unique identifier for the associated cache.  Any other consumers or producers for this cache must use the same name.'
    default: 'null'
  failure-path-upload:
    description: 'The relative path to a desired log for upload if the task fails.'
    default: 'null'

runs:
  using: 'composite'
  steps:

    # Around March 2025 we've started seeing jobs fail with what looks like
    # a race initialize version catalog (failure to resolve 'libs.', etc.).
    # Forcing an initial run of `tasks` fixes that.
    - name: Initial Gradle command
      shell: bash
      run: ./gradlew tasks

    - name: Set up JDK
      uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4
      with:
        distribution: ${{inputs.distribution}}
        java-version: ${{inputs.java-version}}

    - name: Set Gradle Args for runner OS
      id: gradle-args
      uses: ./.github/actions/gradle-args

    - name: Gradle build action
      uses: gradle/actions/setup-gradle@v4
      with:
        cache-read-only: false
        gradle-home-cache-cleanup: true

    # Calculate all the hashes for keys just one time.
    # These should only be referenced before the actual task action, since that action
    # may generate changes and we want the final cache key to reflect its current state.
    - name: Calculate hashes
      id: hashes
      shell: bash
      run: |
        echo "lib_versions=${{ hashFiles('**/libs.versions.toml') }}" >> $GITHUB_OUTPUT
        echo "gradle_props=${{ hashFiles('**/gradle.properties') }}" >> $GITHUB_OUTPUT
        echo "gradle_kts=${{ hashFiles('**/*.gradle.kts') }}" >> $GITHUB_OUTPUT
        echo "src_kt=${{ hashFiles('**/src/**/*.kt') }}" >> $GITHUB_OUTPUT

    # Attempt to restore from the write-cache-key, or fall back to a partial match for the write key.
    # Skipped if the write-cache-key wasn't set.
    # This step's "cache_hit" output will only be true if an exact match was found.
    - name: restore cache for ${{inputs.write-cache-key}}
      id: restore-write-cache
      if: inputs.write-cache-key != 'null'
      uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4
      with:
        path: |
          ~/.gradle/caches/build-cache-1
          ~/.konan
          ./**/build/**/!(*.dex)
          ./**/.gradle
        key: ${{runner.os}}-${{inputs.write-cache-key}}-${{steps.hashes.outputs.lib_versions}}-${{steps.hashes.outputs.gradle_props}}-${{steps.hashes.outputs.gradle_kts}}-${{steps.hashes.outputs.src_kt}}
        restore-keys: |
          ${{runner.os}}-${{inputs.write-cache-key}}-${{steps.hashes.outputs.lib_versions}}-${{steps.hashes.outputs.gradle_props}}-${{steps.hashes.outputs.gradle_kts}}
          ${{runner.os}}-${{inputs.write-cache-key}}-${{steps.hashes.outputs.lib_versions}}-${{steps.hashes.outputs.gradle_props}}
          ${{runner.os}}-${{inputs.write-cache-key}}-${{steps.hashes.outputs.lib_versions}}
          ${{runner.os}}-${{inputs.write-cache-key}}

    # Attempt to restore from the restore-cache-key, or fall back to a partial match for the restore key.
    # Skipped if the restore-cache-key wasn't set, or if the write-cache-key restore had an exact match.
    - name: restore cache for ${{inputs.restore-cache-key}}
      if: inputs.restore-cache-key != 'null' && steps.restore-write-cache.outputs.cache-hit != 'true'
      uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4
      with:
        path: |
          ~/.gradle/caches/build-cache-1
          ~/.konan
          ./**/build/**/!(*.dex)
          ./**/.gradle
        key: ${{runner.os}}-${{inputs.restore-cache-key}}-${{steps.hashes.outputs.lib_versions}}-${{steps.hashes.outputs.gradle_props}}-${{steps.hashes.outputs.gradle_kts}}-${{steps.hashes.outputs.src_kt}}
        restore-keys: |
          ${{runner.os}}-${{inputs.restore-cache-key}}-${{steps.hashes.outputs.lib_versions}}-${{steps.hashes.outputs.gradle_props}}-${{steps.hashes.outputs.gradle_kts}}
          ${{runner.os}}-${{inputs.restore-cache-key}}-${{steps.hashes.outputs.lib_versions}}-${{steps.hashes.outputs.gradle_props}}
          ${{runner.os}}-${{inputs.restore-cache-key}}-${{steps.hashes.outputs.lib_versions}}
          ${{runner.os}}-${{inputs.restore-cache-key}}

    - uses: gradle/actions/wrapper-validation@ac638b010cf58a27ee6c972d7336334ccaf61c96 # v4

    # Run the actual task
    - name: Run ${{inputs.task}}
      uses: gradle/actions/setup-gradle@v4
      with:
        # These arguments need to be on a single line. If they're defined with wrapping (using `|`),
        # something along the way to the actual CLI invocation gets confused and the jvmargs list
        # winds up getting parsed as a single argument.
        arguments: ${{steps.gradle-args.outputs.gradle-property-args}} ${{inputs.task}} '-Dorg.gradle.jvmargs=${{steps.gradle-args.outputs.gradle-jvm-args}}'
        cache-read-only: false
        build-root-directory: ${{inputs.build-root-directory}}
        gradle-home-cache-cleanup: true

    # Save the build cache to `write-cache-key`.
    # Skip if we already had an exact match, or if the key is not set, or if this is a Windows runner.
    # Windows runners are welcome to *read* the cross-OS cache, but the directories get weird if
    # they try to write to it.
    - name: save the '${{inputs.write-cache-key}}' cache
      uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4
      id: save-write-cache-key
      if: inputs.write-cache-key != 'null' && steps.restore-write-cache.outputs.cache-hit != 'true'
      with:
        path: |
          ~/.gradle/caches/build-cache-1
          ~/.konan
          ./**/build/**/!(*.dex)
          ./**/.gradle
        key: ${{runner.os}}-${{inputs.write-cache-key}}-${{hashFiles('**/libs.versions.toml')}}-${{hashFiles('**/gradle.properties')}}-${{hashFiles('**/*.gradle.kts')}}-${{hashFiles('**/src/**/*.kt')}}

    - name: Upload Any Logs
      if: failure()
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        name: log-upload
        path: ${{github.workspace}}/**/*.log

    - name: Upload Any Heap Dumps
      if: failure()
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        name: hprof-upload
        path: ${{github.workspace}}/**/*.hprof

    - name: Upload Any Specified Files
      if: failure() && inputs.failure-path-upload != 'null'
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        name: specified-upload
        path: ${{github.workspace}}/${{inputs.failure-path-upload}}

